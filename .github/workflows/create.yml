name: Create Bot Website and Pull Request

on:
  issues:
    types: [opened]

jobs:
  generate-html:
    runs-on: ubuntu-latest
    steps:
      - name: Parse issue
        id: parse
        uses: onmax/issue-form-parser@v1.4
        with:
          issue_number: ${{ github.event.issue.number }}
    
      - name: Show parsed payload data
        run: |
          echo '${{ steps.parse.outputs.payload }}'
          
          echo '${{ fromJson(steps.parse.outputs.payload).Name }}'

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create index.html
        run: |
          filename="${{ fromJson(steps.parse.outputs.payload).Name }}.html"
          echo '<!DOCTYPE html>' > "$filename"
          echo '<html lang="en">' >> "$filename"
          echo '<head>' >> "$filename"
          echo '  <meta charset="UTF-8">' >> "$filename"
          echo '  <meta name="viewport" content="width=device-width, initial-scale=1.0">' >> "$filename"
          echo "  <title>\${{ fromJson(steps.parse.outputs.payload).Name }}</title>" >> "$filename"
          echo '  <link rel="stylesheet" type="text/css" href="style.css">' >> "$filename"
          echo "  <link rel=\"icon\" href=\"\${{ fromJson(steps.parse.outputs.payload).Icon }}\" type=\"image/x-icon\">" >> "$filename"
          echo '</head>' >> "$filename"
          echo '<body>' >> "$filename"
          echo '  <div class="container">' >> "$filename"
          echo '    <header>' >> "$filename"
          echo '      <img src="\${{ fromJson(steps.parse.outputs.payload).Icon }}" alt="Bot Logo" id="bot-logo">' >> "$filename"
          echo '      <h1 id="bot-name">\${{ fromJson(steps.parse.outputs.payload).Name }}</h1>' >> "$filename"
          echo '    </header>' >> "$filename"
          echo '    <section class="description">' >> "$filename"
          echo '      <p>$(echo "${{ fromJson(steps.parse.outputs.payload).Description }}" | tr '\n' ' ')</p>' >> "$filename"
          echo '    </section>' >> "$filename"
          echo '    <br>' >> "$filename"
          echo '    <section class="support">' >> "$filename"
          echo '      <p>For support and discussions, join our Discord server: <a href="\${{ fromJson(steps.parse.outputs.payload).Invite }}" target="_blank">Join the server</a></p>' >> "$filename"
          echo '    </section>' >> "$filename"
          echo '    <br>' >> "$filename"
          echo '    <section class="bot-demo">' >> "$filename"
          echo '      <img src="\${{ fromJson(steps.parse.outputs.payload).Demo }}" alt="Bot Demo" id="bot-image">' >> "$filename"
          echo '    </section>' >> "$filename"
          echo '    <section class="footer">' >> "$filename"
          echo '      <p>This website was generated for free by <a href="#" target="_blank">guardian bot list!</a> You can make one for your bot at <a href="https://github.com/adambotfd/dashboard-maker/" target="_blank">our github repo</a> or advertise your discord bot <a href="https://guardianbots.vercel.app" target="_blank">here.</a></p>' >> "$filename"
          echo '    </section>' >> "$filename"
          echo '  </div>' >> "$filename"
          echo '</body>' >> "$filename"
          echo '</html>' >> "$filename"


      - run: git config --global user.email "multibotfd@gmail.com"
      - run: git config --global user.name "adambotfd"
      - run: git add "${{ fromJson(steps.parse.outputs.payload).Name }}.html"
      - run: git commit -m "Dynamic Website Generation Of ${{ fromJson(steps.parse.outputs.payload).Name }}.html"
      - run: git push

      - run: rm description_temp.txt

      - name: Create comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          token: ${{ secrets.PAT_TOKEN }}
          repository: ${{ github.repository }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            Your bots website will be live shortly! You can view it at https://disforge.vercel.app/${{ fromJson(steps.parse.outputs.payload).Name }}.html

          reactions: '+1'

      - name: Close issue
        uses: peter-evans/close-issue@v1
        with:
          token: ${{ secrets.PAT_TOKEN }}
          issue-number: ${{ github.event.issue.number }}

      
